# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Unit Tests and Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v5
    - name: Install packages
      run: |
        cd ./deploy && ./install_common_libraries.sh

    - name: Download pre-built mavlink-router
      run: |
        
        # Set the mavlink-router version to download
        MAVLINK_ROUTER_VERSION="4"
        
        echo "Downloading mavlink-router for AMD64"
        wget -O ./mavlink-routerd \
          "https://github.com/mavlink-router/mavlink-router/releases/download/v${MAVLINK_ROUTER_VERSION}/mavlink-routerd-glibc-x86_64"
        
        
        # Make the binary executable
        chmod +x ./mavlink-routerd
        
        # Verify the downloaded binary
        file ./mavlink-routerd

    - name: Copy Zerotier token
      run: |
          sudo cp /var/lib/zerotier-one/authtoken.secret /home/$USER/.zeroTierOneAuthToken
          sudo chown $USER:$USER /home/$USER/.zeroTierOneAuthToken
          chmod 0600 /home/$USER/.zeroTierOneAuthToken

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run testback
    - run: rm -f ./config/settings.json
    - run: npm run testfront
    - run: npm run test-cov
    - run: rm -f ./config/settings.json
    
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: $node-${{ matrix.node-version }}
        parallel: true
        
  finish:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
