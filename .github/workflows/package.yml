name: Build Debian Package

on: [push, pull_request, workflow_dispatch]

jobs:
    build:
        runs-on: ubuntu-22.04
        strategy:
          matrix:
            arch: [amd64, arm64]
        steps:
        - uses: actions/checkout@v4

        - name: Use Node.js 20.x
          uses: actions/setup-node@v4
          with:
            node-version: 20.x
            cache: 'npm'

        - name: Update submodules
          run: git submodule update --init --recursive

        - name: Regenerate package-lock.json for arm64
          if: matrix.arch == 'arm64'
          run: |
            if [ -f package-lock.json ]; then
              rm package-lock.json
            fi
            npm install --package-lock-only

        - name: Install dependencies
          run: npm ci

        - name: Insert architecture into package.json
          run: |
            # Update package.json with the architecture
            jq --arg arch "${{ matrix.arch }}" '.node_deb.architecture = $arch' package.json > tmp.json && mv tmp.json package.json

        - name: Build mavlink-router
          run: |
            sudo apt update && sudo apt install -y ninja-build  && sudo pip3 install meson && cd ./deploy && ./build_mavlinkrouter.sh

        - name: Build package
          run: npm run package

        - name: Repackage using xz for earlier Debian versions
          run: |
            for file in rpanion-server_*.deb; do
              dpkg-deb -R "$file" temp_dir
              dpkg-deb -bZxz temp_dir "${file%.deb}.xz"
              rm -rf temp_dir
              rm -rf "$file"
              mv "${file%.deb}.xz" "$file"
            done

        - name: Archive build
          uses: actions/upload-artifact@v4
          with:
            name: rpanion-server-${{ matrix.arch }}.deb
            path: 'rpanion-server_*.deb'
            retention-days: 7
    deploy:
      if: github.event_name != 'pull_request'
      needs: build  # This ensures deploy only runs after all matrix builds complete
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Download all artifacts
          uses: actions/download-artifact@v4
          with:
            path: artifacts/
        - name: Release
          uses: "softprops/action-gh-release@v2"
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            prerelease: false
            files: |
              artifacts/rpanion-server-amd64.deb/rpanion-server_*.deb
              artifacts/rpanion-server-arm64.deb/rpanion-server_*.deb
            token: "${{ secrets.GITHUB_TOKEN }}"
        - name: Delete existing pre-release
          if: github.ref == 'refs/heads/master'
          run: |
            gh release delete latest --yes || true
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Moved rename step here for pre-release builds
        - name: Rename files for pre-release builds
          if: github.ref == 'refs/heads/master'
          run: |
            # List all the files first for debugging
            find artifacts/ -name "*.deb"
            
            # Rename each file with -dev suffix
            for file in artifacts/*/*.deb; do
              echo "Processing file: $file"
              dir=$(dirname "$file")
              filename=$(basename "$file")
              version=$(echo "$filename" | sed -E 's/rpanion-server_([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
              arch=$(echo "$filename" | grep -oE '_amd64\.deb|_arm64\.deb')
              new_name="rpanion-server_dev${arch}"
              mv "$file" "$dir/$new_name"
              echo "Renamed $filename to $new_name"
            done
            
            # List again to verify renaming
            find artifacts/ -name "*.deb"
        - name: Pre Release
          uses: "softprops/action-gh-release@v2"
          if: github.ref == 'refs/heads/master'
          with:
            prerelease: true
            name: "Development Build"
            tag_name: "latest"
            files: |
              artifacts/rpanion-server-amd64.deb/rpanion-server_*.deb
              artifacts/rpanion-server-arm64.deb/rpanion-server_*.deb
            token: "${{ secrets.GITHUB_TOKEN }}"
